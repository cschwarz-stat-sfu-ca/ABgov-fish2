temp$t.ratio <- NULL
temp
temp[, c("Assumptions","n.sites.per.year","contrast","estimate","SE","df","p.value")]
n.years<-8
sd.year <- .5
sd.site <- .3
mlm.data <- expand.grid(n.sites.per.year=c(4,10), Year=1:n.years)
mlm.data <- plyr::adply(mlm.data, 1, function(x) {
x <- x[ rep(1,x$n.sites.per.year),]
x$Site <- paste("S",'.',x$Year[1],'.',1:nrow(x), sep="")
x})
year.eff <- data.frame(Year=1:n.years, year.eff=rnorm(n.years, sd=sd.year))
mlm.data <- merge(mlm.data, year.eff, all.x=TRUE)  # add  year effects
mlm.data$BA <- "Before"
mlm.data$BA[ mlm.data$Year > n.years/2] <- "After"
xtabs(~BA+Year, data=mlm.data)
BA.eff <- data.frame(BA=c("Before","After"), ba.eff=c(-1, 1))
mlm.data <- merge(mlm.data, BA.eff, all.x=TRUE)
mlm.data$logCUE <- 2 + mlm.data$ba.eff + mlm.data$year.eff
# Generate the various data sets
# No violations of assumptions for residuals
mlm.data1 <- mlm.data
mlm.data1$logCUE <- mlm.data1$logCUE + rnorm(nrow(mlm.data1), sd=sd.site)
mlm.data1$Assumptions <- "No violations"
# A single outlier for a residual
mlm.data2 <- mlm.data
mlm.data2$logCUE <- mlm.data2$logCUE + rnorm(nrow(mlm.data2), sd=sd.site)
mlm.data2$logCUE[ mlm.data2$Year==1 & mlm.data2$Site=="S.1.1"] <-
mlm.data2$logCUE[ mlm.data2$Year==1 & mlm.data2$Site=="S.1.1"] +5
mlm.data2$Assumptions <- 'Outlier'
# A non-normal distribution e.g. t with 2 df
mlm.data3 <- mlm.data
mlm.data3$logCUE <- mlm.data3$logCUE + rt(nrow(mlm.data3), df=3)*sd.site
mlm.data3$Assumptions <- 'Non normal site eff'
mlm.all <- plyr::rbind.fill(mlm.data1, mlm.data2, mlm.data3)
head(mlm.all)
ggplot(data=mlm.all, aes(x=Year, y=logCUE))+
ggtitle("Sample data for residual violations")+
geom_point()+
facet_grid(Assumptions~n.sites.per.year)
# Fit the before/after model to the simulated
ba.sim.fits <- plyr::dlply(mlm.all, c("Assumptions","n.sites.per.year"), function(x){
#browser()
x$YearF <- factor(x$Year)
# If we use the log() in the fit, the emmeans package can do the back transform automatically for us
fit <- lmerTest::lmer(logCUE ~ BA + (1|YearF), data=x)
# we create the emmeans object and then find the pairwise difference
fit.emmo <- emmeans::emmeans(fit, ~BA)
BA.diff.log <- summary(pairs(fit.emmo), infer=TRUE)
BA.ratio    <- summary(pairs(fit.emmo, type="response"))
list(fit=fit,
BA.diff.log=BA.diff.log,
BA.ratio=BA.ratio)
})
# Get all of the fits and store them in a list with the emmeans computatons
ba.sim.diffs <- plyr::ldply(ba.sim.fits, function(x){x$BA.diff.log})
ba.sim.diffs
# pretty up the output
temp<- ba.sim.diffs
num.col <- sapply(temp, is.numeric)
temp[,num.col] <- round(temp[,num.col],2)
temp$t.ratio <- NULL
temp[, c("Assumptions","n.sites.per.year","contrast","estimate","SE","df","p.value")]
# generate six scenarios; 2 sample sizes x no violations, a single outier, non-normality
# Before/after study with 4 years before and after
n.years<-8
sd.year <- .5
sd.site <- .3
mlm.data <- expand.grid(n.sites.per.year=c(4,10), Year=1:n.years)
mlm.data <- plyr::adply(mlm.data, 1, function(x) {
x <- x[ rep(1,x$n.sites.per.year),]
x$Site <- paste("S",'.',x$Year[1],'.',1:nrow(x), sep="")
x})
year.eff <- data.frame(Year=1:n.years, year.eff=rnorm(n.years, sd=sd.year))
mlm.data <- merge(mlm.data, year.eff, all.x=TRUE)  # add  year effects
mlm.data$BA <- "Before"
mlm.data$BA[ mlm.data$Year > n.years/2] <- "After"
xtabs(~BA+Year, data=mlm.data)
BA.eff <- data.frame(BA=c("Before","After"), ba.eff=c(0, .7))
mlm.data <- merge(mlm.data, BA.eff, all.x=TRUE)
mlm.data$logCUE <- 2 + mlm.data$ba.eff + mlm.data$year.eff
# Generate the various data sets
# No violations of assumptions for residuals
mlm.data1 <- mlm.data
mlm.data1$logCUE <- mlm.data1$logCUE + rnorm(nrow(mlm.data1), sd=sd.site)
mlm.data1$Assumptions <- "No violations"
# A single outlier for a residual
mlm.data2 <- mlm.data
mlm.data2$logCUE <- mlm.data2$logCUE + rnorm(nrow(mlm.data2), sd=sd.site)
mlm.data2$logCUE[ mlm.data2$Year==1 & mlm.data2$Site=="S.1.1"] <-
mlm.data2$logCUE[ mlm.data2$Year==1 & mlm.data2$Site=="S.1.1"] +8
mlm.data2$Assumptions <- 'Outlier'
# A non-normal distribution e.g. t with 2 df
mlm.data3 <- mlm.data
mlm.data3$logCUE <- mlm.data3$logCUE + rt(nrow(mlm.data3), df=3)*sd.site
mlm.data3$Assumptions <- 'Non normal site eff'
mlm.all <- plyr::rbind.fill(mlm.data1, mlm.data2, mlm.data3)
head(mlm.all)
ggplot(data=mlm.all, aes(x=Year, y=logCUE))+
ggtitle("Sample data for residual violations")+
geom_point()+
facet_grid(Assumptions~n.sites.per.year)
# Fit the before/after model to the simulated
ba.sim.fits <- plyr::dlply(mlm.all, c("Assumptions","n.sites.per.year"), function(x){
#browser()
x$YearF <- factor(x$Year)
# If we use the log() in the fit, the emmeans package can do the back transform automatically for us
fit <- lmerTest::lmer(logCUE ~ BA + (1|YearF), data=x)
# we create the emmeans object and then find the pairwise difference
fit.emmo <- emmeans::emmeans(fit, ~BA)
BA.diff.log <- summary(pairs(fit.emmo), infer=TRUE)
BA.ratio    <- summary(pairs(fit.emmo, type="response"))
list(fit=fit,
BA.diff.log=BA.diff.log,
BA.ratio=BA.ratio)
})
# Get all of the fits and store them in a list with the emmeans computatons
ba.sim.diffs <- plyr::ldply(ba.sim.fits, function(x){x$BA.diff.log})
ba.sim.diffs
# pretty up the output
temp<- ba.sim.diffs
num.col <- sapply(temp, is.numeric)
temp[,num.col] <- round(temp[,num.col],2)
temp$t.ratio <- NULL
temp[, c("Assumptions","n.sites.per.year","contrast","estimate","SE","df","p.value")]
# Load the dianostic plots for linear mixed models
# The most up to date version is located at
#source("http://www.stat.sfu.ca/~cschwarz/Stat-650/Notes/MyPrograms/schwarz.functions.r")
# but a copy is included in this directory.
source("schwarz.functions.r")
View(sf.autoplot.lmer)
diag.plot <- sf.autoplot.lmer(x$fit, which=c(1,2))
# Extract the residual diagnostic plots
ba.sim.resid.plot <- plyr::llply(ba.sim.fits, function(x){
diag.plot <- sf.autoplot.lmer(x$fit, which=c(1,2))
})
# Extract the residual diagnostic plots
ba.sim.resid.plot <- plyr::llply(ba.sim.fits, function(x){
diag.plot <- sf.autoplot.lmer(x$fit, which=c(1,2))
diag.plot
})
# Extract the residual diagnostic plots
ba.sim.resid.plot <- plyr::llply(ba.sim.fits, function(x){
diag.plot <- sf.autoplot.lmer(x$fit, which=c(1,2))
browser()
diag.plot
})
diag.plot
show(diag.plot)
plot(diag.plot)
plot(diag.plot)
help(plot)
# Extract the residual diagnostic plots
ba.sim.resid.plot <- plyr::llply(ba.sim.fits, function(x){
diag.plot <- sf.autoplot.lmer(x$fit, which=c(1,2))
diag.plot <- grid.arrange(top="This is a title", diag.plot)
plot(diag.plot)
})
# Fit the before/after model to the simulated
ba.sim.fits <- plyr::dlply(mlm.all, c("Assumptions","n.sites.per.year"), function(x){
#browser()
x$YearF <- factor(x$Year)
# If we use the log() in the fit, the emmeans package can do the back transform automatically for us
fit <- lmerTest::lmer(logCUE ~ BA + (1|YearF), data=x)
# we create the emmeans object and then find the pairwise difference
fit.emmo <- emmeans::emmeans(fit, ~BA)
BA.diff.log <- summary(pairs(fit.emmo), infer=TRUE)
BA.ratio    <- summary(pairs(fit.emmo, type="response"))
list(fit=fit,
Assumptions=x$Assumptions[1], n.sites.per.year=x$n.sites.per.year[1],
BA.diff.log=BA.diff.log,
BA.ratio=BA.ratio)
})
# Extract the residual diagnostic plots
ba.sim.resid.plot <- plyr::llply(ba.sim.fits, function(x){
diag.plot <- sf.autoplot.lmer(x$fit, which=c(1,2))
diag.plot <- grid.arrange(top=paste(x$Assumptions,"; ", x$n.sites.per.year,' sites per year',sep=""), diag.plot)
plot(diag.plot)
})
# Extract the residual diagnostic plots
ba.sim.resid.plot <- plyr::l_ply(ba.sim.fits, function(x){
diag.plot <- sf.autoplot.lmer(x$fit, which=c(1,2))
diag.plot <- grid.arrange(top=paste(x$Assumptions,"; ", x$n.sites.per.year,' sites per year',sep=""), diag.plot)
plot(diag.plot)
})
help(grid.arrange)
# Extract the residual diagnostic plots
ba.sim.resid.plot <- plyr::l_ply(ba.sim.fits, function(x){
diag.plot <- sf.autoplot.lmer(x$fit, which=c(1,2))
diag.plot <- arrangeGrob(top=paste(x$Assumptions,"; ", x$n.sites.per.year,' sites per year',sep=""), diag.plot)
plot(diag.plot)
})
names(ba.sims.fits)
names(ba.sim.fits)
# generate six scenarios; 2 sample sizes x no violations, a single outier, non-normality
# Before/after study with 4 years before and after
n.years<-8
sd.year <- .5
sd.site <- .3
mlm.data <- expand.grid(n.sites.per.year=c(4,10), Year=1:n.years)
mlm.data <- plyr::adply(mlm.data, 1, function(x) {
x <- x[ rep(1,x$n.sites.per.year),]
x$Site <- paste("S",'.',x$Year[1],'.',1:nrow(x), sep="")
x})
year.eff <- data.frame(Year=1:n.years, year.eff=rnorm(n.years, sd=sd.year))
mlm.data <- merge(mlm.data, year.eff, all.x=TRUE)  # add  year effects
mlm.data$BA <- "Before"
mlm.data$BA[ mlm.data$Year > n.years/2] <- "After"
xtabs(~BA+Year, data=mlm.data)
BA.eff <- data.frame(BA=c("Before","After"), ba.eff=c(0, .7))
mlm.data <- merge(mlm.data, BA.eff, all.x=TRUE)
mlm.data$logCUE <- 2 + mlm.data$ba.eff + mlm.data$year.eff
# Generate the various data sets
# No violations of assumptions for residuals
mlm.data1 <- mlm.data
mlm.data1$logCUE <- mlm.data1$logCUE + rnorm(nrow(mlm.data1), sd=sd.site)
mlm.data1$Assumptions <- "No violations"
# A single outlier for a residual
mlm.data2 <- mlm.data
mlm.data2$logCUE <- mlm.data2$logCUE + rnorm(nrow(mlm.data2), sd=sd.site)
mlm.data2$logCUE[ mlm.data2$Year==1 & mlm.data2$Site=="S.1.1"] <-
mlm.data2$logCUE[ mlm.data2$Year==1 & mlm.data2$Site=="S.1.1"] +8
mlm.data2$Assumptions <- 'Outlier'
# A non-normal distribution e.g. t with 2 df
mlm.data3 <- mlm.data
mlm.data3$logCUE <- mlm.data3$logCUE + rt(nrow(mlm.data3), df=3)*sd.site
mlm.data3$Assumptions <- 'Non normal site eff'
mlm.all <- plyr::rbind.fill(mlm.data1, mlm.data2, mlm.data3)
#head(mlm.all)
# Fit the before/after model to the simulated
ba.sim.fits <- plyr::dlply(mlm.all, c("Assumptions","n.sites.per.year"), function(x){
#browser()
x$YearF <- factor(x$Year)
# If we use the log() in the fit, the emmeans package can do the back transform automatically for us
fit <- lmerTest::lmer(logCUE ~ BA + (1|YearF), data=x)
# we create the emmeans object and then find the pairwise difference
fit.emmo <- emmeans::emmeans(fit, ~BA)
BA.diff.log <- summary(pairs(fit.emmo), infer=TRUE)
BA.ratio    <- summary(pairs(fit.emmo, type="response"))
list(fit=fit,
Assumptions=x$Assumptions[1], n.sites.per.year=x$n.sites.per.year[1],
BA.diff.log=BA.diff.log,
BA.ratio=BA.ratio)
})
sf.autoplot.lmer(ba.sim.fits[[1]]$fit)
plot(sf.autoplot.lmer(ba.sim.fits[[1]]$fit))
# Extract the residual diagnostic plots
ba.sim.resid.plot <- plyr::l_ply(ba.sim.fits, function(x){
diag.plot <- sf.autoplot.lmer(x$fit, which=c(1,2))
diag.plot <- arrangeGrob(top=paste(x$Assumptions,"; ", x$n.sites.per.year,' sites per year',sep=""), diag.plot)
plot(diag.plot)
})
# Get all of the fits and store them in a list with the emmeans computatons
ba.sim.diffs <- plyr::ldply(ba.sim.fits, function(x){x$BA.diff.log})
ba.sim.diffs
# pretty up the output
temp<- ba.sim.diffs
num.col <- sapply(temp, is.numeric)
temp[,num.col] <- round(temp[,num.col],2)
temp$t.ratio <- NULL
temp[, c("Assumptions","n.sites.per.year","contrast","estimate","SE","df","p.value")]
ggplot(data=mlm.all, aes(x=Year, y=logCUE))+
ggtitle("Simulated data for residual violations")+
geom_point()+
facet_grid(Assumptions~n.sites.per.year)
ggplot(data=mlm.all, aes(x=Year, y=logCUE))+
ggtitle("Simulated data for residual violations")+
geom_point( position=position_jitter(width=.1))+
facet_grid(Assumptions~n.sites.per.year)
mlm.all$n.sites.per.year.text <- paste("Sites per stream-year ", mlm.all$n.sites.per.year)
ggplot(data=mlm.all, aes(x=Year, y=logCUE))+
ggtitle("Simulated data for residual violations")+
geom_point( position=position_jitter(width=.1))+
facet_grid(Assumptions~n.sites.per.year.text)
stream.eff <- data.frame(Stream=paste("Stream.",1:n.streams,sep=""),
stream.eff=rnorm(n.streams, sd=sd.stream),
CI=c("C","I"))
# generate six scenarios; 2 sample sizes x no violations, a single outier, non-normality
# Before/after study with 4 years before and after
n.years<-8
n.streams<- 4
sd.year <- .5
sd.site <- .3
sd.stream <- .5
sd.year.stream <- .2
mlm.data <- expand.grid(n.sites.per.year=c(4,10), Year=1:n.years, Stream=paste("Stream.",1:n.streams,sep=""))
mlm.data <- plyr::adply(mlm.data, 1, function(x) {
x <- x[ rep(1,x$n.sites.per.year),]
x$Site <- paste("S",'.',x$Year[1],'.',1:nrow(x), sep="")
x})
year.eff <- data.frame(Year=1:n.years, year.eff=rnorm(n.years, sd=sd.year))
mlm.data <- merge(mlm.data, year.eff, all.x=TRUE)  # add  year effects
xtabs(~BA+Year, data=mlm.data)
# generate six scenarios; 2 sample sizes x no violations, a single outier, non-normality
# Before/after study with 4 years before and after
n.years<-8
n.streams<- 4
sd.year <- .5
sd.site <- .3
sd.stream <- .5
sd.year.stream <- .2
mlm.data <- expand.grid(n.sites.per.year=c(4,10), Year=1:n.years, Stream=paste("Stream.",1:n.streams,sep=""))
mlm.data <- plyr::adply(mlm.data, 1, function(x) {
x <- x[ rep(1,x$n.sites.per.year),]
x$Site <- paste("S",'.',x$Year[1],'.',1:nrow(x), sep="")
x})
year.eff <- data.frame(Year=1:n.years, year.eff=rnorm(n.years, sd=sd.year))
year.eff$BA<- "Before"
year.eff$BA[ year.eff$Year > n.years/2] <- "After"
mlm.data <- merge(mlm.data, year.eff, all.x=TRUE)  # add  year effects
stream.eff <- data.frame(Stream=paste("Stream.",1:n.streams,sep=""),
stream.eff=rnorm(n.streams, sd=sd.stream),
CI=c("C","I"))
mlm.data <- merge(mlm.data,stream.eff, all.x=TRUE)
xtabs(~BA+Year, data=mlm.data)
xtabs(~Stream+CI, data=mlm.data)
n.years<-8
n.streams<- 4
sd.year <- .5
sd.site <- .3
sd.stream <- .5
sd.year.stream <- .2
mlm.data <- expand.grid(n.sites.per.year=10, Year=1:n.years, Stream=paste("Stream.",1:n.streams,sep=""))
mlm.data <- plyr::adply(mlm.data, 1, function(x) {
x <- x[ rep(1,x$n.sites.per.year),]
x$Site <- paste("S",'.',x$Year[1],'.',1:nrow(x), sep="")
x})
year.eff <- data.frame(Year=1:n.years, year.eff=rnorm(n.years, sd=sd.year))
year.eff$BA<- "Before"
year.eff$BA[ year.eff$Year > n.years/2] <- "After"
mlm.data <- merge(mlm.data, year.eff, all.x=TRUE)  # add  year effects
stream.eff <- data.frame(Stream=paste("Stream.",1:n.streams,sep=""),
stream.eff=rnorm(n.streams, sd=sd.stream),
CI=c("C","I"))
mlm.data <- merge(mlm.data,stream.eff, all.x=TRUE)
year.stream.eff <- expand.grid(Year=1:n.years, Stream=paste("Stream.",1:n.streams,sep=""))
year.stream.eff$year.stream.eff <- rnorm(nrow(year.stream.eff), sd=sd.year.stream)
mlm.data <- merge(mlm.data, year.stream.eff, all.x=TRUE)
mlm.data1 <- mlm.data
mlm.data1$Assumptions <- "No violations"
# A year residual
mlm.data2 <- mlm.data
mlm.data2$logCUE[ mlm.data2$Year==1 ] <-  mlm.data2$logCUE[ mlm.data2$Year==1] +8
mlm.data2$Assumptions <- 'Outlier - Year Effect'
# A stream outlier
mlm.data3 <- mlm.data
mlm.data3$logCUE[ mlm.data3$Stream==1 ] <-  mlm.data3$logCUE[ mlm.data3$Stream==1] +8
mlm.data3$Assumptions <- 'Outlier - Stream Effect'
# A stream outlier
mlm.data4 <- mlm.data
mlm.data4$logCUE[ mlm.data4$Stream==1 & mlm.data$Year==1 ] <-  mlm.data4$logCUE[ mlm.data4$Stream==1 & mlm.data$Year==1] +8
mlm.data4$Assumptions <- 'Outlier - Year-Stream Effect'
mlm.all <- plyr::rbind.fill(mlm.data1, mlm.data2, mlm.data3, mlm.data4)
ggplot(data=mlm.all, aex(x=Year, y=logCUE, color=CI, shape=Stream))+
ggtitle("Simulated data for BACI analysis")+
geom_point()+
facet_wrap(~Assumptions, ncol=2)
ggplot(data=mlm.all, aes(x=Year, y=logCUE, color=CI, shape=Stream))+
ggtitle("Simulated data for BACI analysis")+
geom_point()+
facet_wrap(~Assumptions, ncol=2)
head(mlm.all)
mlm.data$logCUE <- 2 + mlm.data$ba.eff + mlm.data$ci.eff + mlm.data$year.eff +mlm.data$stream.eff +mlm.data$year.stream.eff                     + rnorm(nrow(mlm.data), sd=sd.site)
mlm.data$ba.eff
BA.eff <- data.frame(BA=c("Before","After"), ba.eff=c(0, .7))
mlm.data <- merge(mlm.data, BA.eff, all.x=TRUE)
CI.eff <- data.frame(CI=c("C","I"), ba.eff=c(0, .7))
mlm.data <- merge(mlm.data, CI.eff, all.x=TRUE)
mlm.data$logCUE <- 2 + mlm.data$ba.eff + mlm.data$ci.eff + mlm.data$year.eff +mlm.data$stream.eff +mlm.data$year.stream.eff                     + rnorm(nrow(mlm.data), sd=sd.site)
mlm.data$ba.eff
mlm.data$ci.eff
n.years<-8
n.streams<- 4
sd.year <- .5
sd.site <- .3
sd.stream <- .5
sd.year.stream <- .2
mlm.data <- expand.grid(n.sites.per.year=10, Year=1:n.years, Stream=paste("Stream.",1:n.streams,sep=""))
mlm.data <- plyr::adply(mlm.data, 1, function(x) {
x <- x[ rep(1,x$n.sites.per.year),]
x$Site <- paste("S",'.',x$Year[1],'.',1:nrow(x), sep="")
x})
year.eff <- data.frame(Year=1:n.years, year.eff=rnorm(n.years, sd=sd.year))
year.eff$BA<- "Before"
year.eff$BA[ year.eff$Year > n.years/2] <- "After"
mlm.data <- merge(mlm.data, year.eff, all.x=TRUE)  # add  year effects
stream.eff <- data.frame(Stream=paste("Stream.",1:n.streams,sep=""),
stream.eff=rnorm(n.streams, sd=sd.stream),
CI=c("C","I"))
mlm.data <- merge(mlm.data,stream.eff, all.x=TRUE)
year.stream.eff <- expand.grid(Year=1:n.years, Stream=paste("Stream.",1:n.streams,sep=""))
year.stream.eff$year.stream.eff <- rnorm(nrow(year.stream.eff), sd=sd.year.stream)
mlm.data <- merge(mlm.data, year.stream.eff, all.x=TRUE)
xtabs(~BA+Year, data=mlm.data)
xtabs(~Stream+CI, data=mlm.data)
BA.eff <- data.frame(BA=c("Before","After"), ba.eff=c(0, .7))
mlm.data <- merge(mlm.data, BA.eff, all.x=TRUE)
CI.eff <- data.frame(CI=c("C","I"), ci.eff=c(0, .7))
mlm.data <- merge(mlm.data, CI.eff, all.x=TRUE)
mlm.data$logCUE <- 2 + mlm.data$ba.eff + mlm.data$ci.eff + mlm.data$year.eff +mlm.data$stream.eff +mlm.data$year.stream.eff                     + rnorm(nrow(mlm.data), sd=sd.site)
# Generate the various data sets
# No violations of assumptions for residuals
mlm.data1 <- mlm.data
mlm.data1$Assumptions <- "No violations"
# A year residual
mlm.data2 <- mlm.data
mlm.data2$logCUE[ mlm.data2$Year==1 ] <-  mlm.data2$logCUE[ mlm.data2$Year==1] +8
mlm.data2$Assumptions <- 'Outlier - Year Effect'
# A stream outlier
mlm.data3 <- mlm.data
mlm.data3$logCUE[ mlm.data3$Stream==1 ] <-  mlm.data3$logCUE[ mlm.data3$Stream==1] +8
mlm.data3$Assumptions <- 'Outlier - Stream Effect'
# A stream outlier
mlm.data4 <- mlm.data
mlm.data4$logCUE[ mlm.data4$Stream==1 & mlm.data$Year==1 ] <-  mlm.data4$logCUE[ mlm.data4$Stream==1 & mlm.data$Year==1] +8
mlm.data4$Assumptions <- 'Outlier - Year-Stream Effect'
mlm.all <- plyr::rbind.fill(mlm.data1, mlm.data2, mlm.data3, mlm.data4)
# Fit the before/after model to the simulated
baci.sim.fits <- plyr::dlply(mlm.all, c("Assumptions"), function(x){
#browser()
x$YearF <- factor(x$Year)
fit <- lmerTest::lmer(logCUE ~ BA + CI + BA:CI + (1|YearF) + (1|Stream) + (1|Stream:YearF), data=x)
# we create the emmeans object and then find the pairwise difference
fit.emmo <- emmeans::emmeans(fit, ~BA:CI)
BACI.diff.log <- summary(contrast(fit.emmo,list(baci=c(-1,1,1,-1))), infer=TRUE)
list(fit=fit,
Assumptions=x$Assumptions[1],
BA.diff.log=BA.diff.log)
})
# Fit the before/after model to the simulated
baci.sim.fits <- plyr::dlply(mlm.all, c("Assumptions"), function(x){
#browser()
x$YearF <- factor(x$Year)
fit <- lmerTest::lmer(logCUE ~ BA + CI + BA:CI + (1|YearF) + (1|Stream) + (1|Stream:YearF), data=x)
# we create the emmeans object and then find the pairwise difference
fit.emmo <- emmeans::emmeans(fit, ~BA:CI)
BACI.diff.log <- summary(contrast(fit.emmo,list(baci=c(-1,1,1,-1))), infer=TRUE)
list(fit=fit,
Assumptions=x$Assumptions[1],
BACI.diff.log=BACI.diff.log)
})
head(mlm.data)
ggplot(data=mlm.all, aes(x=Year, y=logCUE, color=CI, shape=Stream))+
ggtitle("Simulated data for BACI analysis")+
geom_point()+
facet_wrap(~Assumptions, ncol=2)
ggplot(data=mlm.all, aes(x=Year, y=logCUE, color=CI, linetype=Stream))+
ggtitle("Simulated data for BACI analysis")+
geom_point()+
geom_line()+
facet_wrap(~Assumptions, ncol=2)
mlm.data3$logCUE[ mlm.data3$Stream=="Stream.1" ]
# A stream outlier
mlm.data3 <- mlm.data
mlm.data3$logCUE[ mlm.data3$Stream=="Stream.1" ] <-  mlm.data3$logCUE[ mlm.data3$Stream=="Stream.1"] +8
mlm.data3$Assumptions <- 'Outlier - Stream Effect'
# A stream outlier
mlm.data4 <- mlm.data
mlm.data4$logCUE[ mlm.data4$Stream=="Stream.1" & mlm.data$Year==1 ] <-  mlm.data4$logCUE[ mlm.data4$Stream=='Stream.1' & mlm.data$Year==1] +8
mlm.data4$Assumptions <- 'Outlier - Year-Stream Effect'
mlm.all <- plyr::rbind.fill(mlm.data1, mlm.data2, mlm.data3, mlm.data4)
# Fit the before/after model to the simulated
baci.sim.fits <- plyr::dlply(mlm.all, c("Assumptions"), function(x){
#browser()
x$YearF <- factor(x$Year)
fit <- lmerTest::lmer(logCUE ~ BA + CI + BA:CI + (1|YearF) + (1|Stream) + (1|Stream:YearF), data=x)
# we create the emmeans object and then find the pairwise difference
fit.emmo <- emmeans::emmeans(fit, ~BA:CI)
BACI.diff.log <- summary(contrast(fit.emmo,list(baci=c(-1,1,1,-1))), infer=TRUE)
list(fit=fit,
Assumptions=x$Assumptions[1],
BACI.diff.log=BACI.diff.log)
})
ggplot(data=mlm.all, aes(x=Year, y=logCUE, color=CI, linetype=Stream))+
ggtitle("Simulated data for BACI analysis")+
geom_point()+
geom_line()+
facet_wrap(~Assumptions, ncol=2)
ggplot(data=mlm.all, aes(x=Year, y=logCUE, color=CI, linetype=Stream))+
ggtitle("Simulated data for BACI analysis")+
geom_point()+
geom_line()+
geom_hline(xintercept=.5+n.years/2)+
facet_wrap(~Assumptions, ncol=2)
ggplot(data=mlm.all, aes(x=Year, y=logCUE, color=CI, linetype=Stream))+
ggtitle("Simulated data for BACI analysis")+
geom_point()+
geom_line()+
geom_vline(xintercept=.5+n.years/2)+
facet_wrap(~Assumptions, ncol=2)
ggplot(data=mlm.all, aes(x=Year, y=logCUE, color=CI, linetype=Stream))+
ggtitle("Simulated data for BACI analysis")+
geom_point()+
geom_line()+
geom_vline(xintercept=.5+n.years/2)+
facet_wrap(~Assumptions, ncol=2)+
xlab("Year\nVertical line delineates before/after")
# Extract the residual diagnostic plots
baci.sim.resid.plot <- plyr::l_ply(baci.sim.fits, function(x){
diag.plot <- sf.autoplot.lmer(x$fit, which=c(3,4,5))
diag.plot <- arrangeGrob(top=paste(x$Assumptions,sep=""), diag.plot)
plot(diag.plot)
})
# Get all of the fits and store them in a list with the emmeans computatons
baci.sim.diffs <- plyr::ldply(baci.sim.fits, function(x){x$BACI.diff.log})
baci.sim.diffs
# pretty up the output
temp<- baci.sim.diffs
num.col <- sapply(temp, is.numeric)
temp[,num.col] <- round(temp[,num.col],2)
temp$t.ratio <- NULL
temp[, c("Assumptions","contrast","estimate","SE","df","p.value")]
